//1
import json
import pandas as pd
with open('data.json', 'r') as file:
data = json.load(file)
df = pd.DataFrame(data)
df_selected = df[['appointmentId', 'phoneNumber', 'patientDetails.firstName', 'patientDetails.lastName', 'patientDetails.gender', 'patientDetails.birthDate', 'consultationData.medicines']]
df_selected.columns = ['appointmentId', 'phoneNumber', 'firstName', 'lastName', 'gender', 'DOB', 'medicines']
df_selected['gender'] = df_selected['gender'].apply(lambda x: 'male' if x == 'M' else ('female' if x == 'F' else 'others'))
print(df_selected)


//2
import pandas as pd

data = [
    {
        "patientDetails": {
            "firstName": "abc",
            "lastName": "xyz"
        }
    },
    {
        "patientDetails": {
            "firstName": "def",
            "lastName": "uvw"
        }
    }
]

df = pd.DataFrame(data)
df['fullName'] = df['patientDetails'].apply(lambda x: f"{x['firstName']} {x['lastName']}", axis=1)

print(df)



 patientDetails fullName
{'firstName': 'abc', 'lastName': 'xyz'}  abc xyz
{'firstName': 'def', 'lastName': 'uvw'}  def uvw




//3

import json

with open('DataEngineeringQ2.json', 'r') as file:
    data = json.load(file)


def is_valid_phone_number(phone_number):
 
    if not (phone_number.startswith('+91') or phone_number.startswith('91')):
        return False

    phone_number = phone_number[2:]

  
    if len(phone_number) != 10 or not phone_number.isdigit():
        return False


    if int(phone_number) < 6000000000 or int(phone_number) > 9999999999:
        return False

    return True

for record in data:
    phone_number = record['phoneNumber']
    record['isValidMobile'] = is_valid_phone_number(phone_number)
    record['phoneNumberHash'] = hash(phone_number)

with open('DataEngineeringQ2_updated.json', 'w') as file:
    json.dump(data, file, indent=2)
